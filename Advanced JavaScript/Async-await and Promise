function fetchUserData(){
    return new Promise((resolve,reject) =>{
         setTimeout(()=>{
             resolve({name:"chaicode",url:"https://chaicode.com"})
         },3000);
    })
}

fetchUserData
.then()
.catch()

async function getUserData(){
    try{
       console.log("fetching user data...);
       const userData = await fetchUserData();
       console.log("User data",userData);
    }catch(error){
        console.log("Error fetching data",error);
    }

}

getUserData();

ASYNC-AWAIT

function fetchUserData(){
    return new Promise((resolve) =>{
         setTimeout(() =>{
             resolve("Post Data fetched");
         },2000);
    })
}

function fetchCommentData(){
     return new Promise((resolve) =>{
         setTimeout(() =>{
             resolve("Comment Data fetched");
         },3000);
    })
}

//Grab multiple promises

async function getBlogData(){
    try{
        console.log("fetching blog data");
        const postData = await fetchPostData();
        const commentData = await fetchCommentData();
        console.log(postData);
        console.log(commentData);
        console.log("fetch complete");
    }catch(error){
        console.error("Error fetching blog data",error);
    }

}

getBlogData();

//using promise all

async function getBlogData(){
    try{
        console.log("fetching blog data");
        const [postData. commentData] = await Promise.all([
           fetchPostData(),
          fetchCommentData(),
        ]);
        console.log(postData);
        console.log(commentData);
        console.log("fetch complete");
    }catch(error){
        console.error("Error fetching blog data",error);
    }

}





